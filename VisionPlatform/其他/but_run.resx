<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="butRun.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>