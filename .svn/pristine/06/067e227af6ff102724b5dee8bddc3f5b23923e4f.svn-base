using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace VisionPlatform
{
    public partial class FormEllipse : Form
    {
        public EllipseParam m_ellipseParam = new EllipseParam();
        public FormEllipse()
        {
            InitializeComponent();
        }

        public EllipseParam InitParam()
        {
            EllipseParam param = new EllipseParam();
            try
            {
                //检测框宽
                if ("0" != textBox_MeasureLen1.Text)
                {
                    param.EPMeasure.nMeasureLen1 = int.Parse(textBox_MeasureLen1.Text);
                }
                else
                    textBox_MeasureLen1.Text = "15";
                //检测框长
                if ("0" != textBox_MeasureLen2.Text)
                {
                    param.EPMeasure.nMeasureLen2 = int.Parse(textBox_MeasureLen2.Text);
                }
                else
                    textBox_MeasureLen2.Text = "3";
                //边缘极性
                int nTrans = comboBox_Trans.SelectedIndex;
                switch (nTrans)
                {
                    case 0:
                        param.EPMeasure.strTransition = "positive";
                        break;
                    case 1:
                        param.EPMeasure.strTransition = "negative";
                        break;
                    default:
                        comboBox_Trans.SelectedIndex = 0;
                        break;
                }
                //边缘选择
                int nSel = comboBox_Select.SelectedIndex;
                switch (nSel)
                {
                    case 0:
                        param.EPMeasure.strSelect = "first";
                        break;
                    case 1:
                        param.EPMeasure.strSelect = "last";
                        break;
                    default:
                        comboBox_Select.SelectedIndex = 0;
                        break;
                }
                //阈值
                if (0 != trackBar_Thd.Value)
                {
                    param.EPMeasure.nMeasureThd = trackBar_Thd.Value;
                    label_Thd.Text = param.EPMeasure.nMeasureThd.ToString();
                }
                else
                {
                    trackBar_Thd.Value = 20;
                    label_Thd.Text = "20";
                }
                param.ellipseIn = Function.m_ellipse;
                return param;
            }
            catch (System.Exception ex)
            {
                return param;
            }

        }
        private void trackBar_Thd_Scroll(object sender, EventArgs e)
        {
            if (null == Function.m_hImage)
                return;
            try
            {
                EllipseParam param = InitParam();
                Ellipse ellipse = new Ellipse();
                if(!Function.FitEllipse(param, out ellipse))
                {
                    return;
                }
            }
            catch(SystemException ex)
            {
                return;
            }
        }

        private void but_SaveData_Click(object sender, EventArgs e)
        {
            m_ellipseParam = InitParam();
        }
    }
}
